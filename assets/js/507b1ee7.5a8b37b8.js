"use strict";(self.webpackChunkjustin_dev_log=self.webpackChunkjustin_dev_log||[]).push([[759],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,p=d["".concat(l,".").concat(h)]||d[h]||m[h]||i;return n?r.createElement(p,a(a({ref:t},u),{},{components:n})):r.createElement(p,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={slug:"immersed-settings",title:"My favorite settings for Working in Immersed Mac"},a="Favorite settings / setup in Immersed for Mac",s={permalink:"/DevBlog/blog/immersed-settings",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-09-31-Immersed-Settings/index.md",source:"@site/blog/2022-09-31-Immersed-Settings/index.md",title:"My favorite settings for Working in Immersed Mac",description:"In this blogpost, I'm going to be talking about my favorite setup using Immerese for Mac. B/c yes, I just love sharing my current virtual setup, b/c living in NYC, space is at a premium, and it amazes me of the future! So yes, this is a bit braggy, but I also just hope to share for fun :)) and thanks to the people in the Immersed community Discord, who provided great advice + ideas + help in setting up my current setup.",date:"2022-10-01T00:00:00.000Z",formattedDate:"October 1, 2022",tags:[],readingTime:2.41,hasTruncateMarker:!1,authors:[],frontMatter:{slug:"immersed-settings",title:"My favorite settings for Working in Immersed Mac"},prevItem:{title:"Welcome to my blog!",permalink:"/DevBlog/blog/welcome-dev-log"},nextItem:{title:"Working in Immersed - 1ms Latency VR (Tutorial for Mac)",permalink:"/DevBlog/blog/immersed-low-latency"}},l={authorsImageUrls:[]},c=[],u={toc:c};function m(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this blogpost, I'm going to be talking about my favorite setup using Immerese for Mac. B/c yes, I just love sharing my current virtual setup, b/c living in NYC, space is at a premium, and it amazes me of the future! So yes, this is a bit braggy, but I also just hope to share for fun :)) and thanks to the people in the Immersed community Discord, who provided great advice + ideas + help in setting up my current setup."),(0,o.kt)("p",null,"(Image of me floating around the Earth + chatting in the Immersed discord)\n",(0,o.kt)("img",{alt:"immersedVR",src:n(7627).Z,width:"1440",height:"1440"})),(0,o.kt)("h1",{id:"first-monitors"},"First, Monitors!"),(0,o.kt)("p",null,"When talking to the Immersed team, I found out that the resolution of the monitors you can spawn in Immeresed is at most, 1920x1080. This is due to them using a VM to represent the screens and it just has a cap to the resolution. While, I can go down a software solution to potentially create my own virtual monitors at a higher resolution, which then gets mirrored into Immersed, I found that I could just buy a ",(0,o.kt)("a",{parentName:"p",href:"https://www.amazon.com/Headless-Display-Emulator-Headless-1920x1080-Generation/dp/B06XT1Z9TF"},"4K ghost plug"),". Which is essentially an HDMI plug that tricks your computer into thinking it has a 4K monitor, without having to actually display the image."),(0,o.kt)("p",null,"I think this is a cheap and great solution. I end up setting these displays to 2048x1080. Even though I can go to 4K, I find the text around the top of the bar, and other parts get way too small. So the 2K resolution, is actually a great sweet spot for me between being able to see, and also having a wide enough monitor to code."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"screenRes",src:n(1915).Z,width:"788",height:"778"})),(0,o.kt)("h1",{id:"second-retina-and-encoding-quality"},"Second! Retina and Encoding Quality:"),(0,o.kt)("p",null,"Retina Quality: 10\nEncoding Quality: High"),(0,o.kt)("p",null,'When talking to the Immersed team, I asked them what is retina quality in the Immersed computer app setting. I was told that: "if your original resolution is 1920x1080, then 0 will render as 1920x1080 pixel and 10 will render as 3840x2160 for retina display." So obviously, the best thing to do is to set it to 10 for higher resolution. I will say this is only possible however b/c I use a ',(0,o.kt)("a",{parentName:"p",href:"./immersed-low-latency"},"wire connection using a (currently at the time of writing this) hacky unsupported method"),", and the latency / performance hit is able to be handled."),(0,o.kt)("p",null,'For encoding quality, I was told: "Encoding quality really depends on contents. If there\'s lots of movement, higher setting will encode with better quality. It doesn\'t really affect for performance-wise, but it will increase data size that affect latency in slow network." B/c of this, while I could do "highest", I decided to just leave it to "high".'),(0,o.kt)("h1",{id:"third-connection-setup"},"Third! Connection setup:"),(0,o.kt)("p",null,"Using a hacky method that someone in the Immersed discord community figured out to allow connecting over a usb connection ",(0,o.kt)("a",{parentName:"p",href:"./immersed-low-latency"},"that has made my life so much better when working in Immersed, bringing latency down to 1ms-5ms"),"."))}m.isMDXComponent=!0},7627:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/immersedVR-d9ec5d10fc1e4bac4612489b5aa14462.jpg"},1915:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/screenres-e5ccbe5ebcd6663a09b7caa747e923f2.png"}}]);